{"version":3,"sources":["redux/authentication/AuthenticationType.js","DBConfig/Config.js","redux/authentication/AuthenticationActions.js","Components/Authentication/signIn/SignIn.jsx","Components/Authentication/signUp/SignUp.jsx","Components/TodoApp/appBar/ApplicationBar.jsx","Components/Authentication/Authentication.jsx","route/PrivateRoute.jsx","redux/todo/todoType.js","redux/todo/todoAction.js","Components/TodoApp/textArea/TextArea.jsx","Components/ui/filterButton/FilterButton.jsx","Components/ui/deleteButton/DeleteButton.jsx","Components/TodoApp/todoList/todoItem/TodoItem.jsx","Components/TodoApp/todoList/TodoList.jsx","Components/ui/modal/ModalWindow.jsx","Components/TodoApp/todoList/todoItem/editTodo/EditTodo.jsx","Components/TodoApp/todoList/todoItem/deleteAndFilterTodo/DeleteAndFilterTodo.jsx","Components/TodoApp/TodoApp.jsx","App.js","redux/authentication/AuthenticationReducer.js","redux/todo/todoReducer.js","redux/rootReducer.js","redux/Store.js","index.js"],"names":["USER_SIGN_IN","USER_SIGN_UP","USER_SIGN_OUT","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","config","firebase","initializeApp","userSignIn","type","getUserData","dispatch","userData","auth","onAuthStateChanged","user","emailVerified","database","ref","uid","once","then","data","val","payload","catch","error","console","log","logoutUser","signOut","err","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","SignIn","props","useDispatch","isLoggedIn","useSelector","state","isLogedIn","useEffect","history","replace","useState","emailValid","setEmailValid","email","setEmail","password","setPassword","classes","login","e","formData","preventDefault","length","signInWithEmailAndPassword","res","alert","Container","component","maxWidth","className","Typography","variant","noValidate","onSubmit","method","TextField","required","fullWidth","id","label","name","autoComplete","value","onChange","pattern","field","target","RegExp","test","helperText","autoFocus","Button","color","Grid","container","justify","item","to","gutterBottom","SignUp","firstNameValid","setFirstNameValid","firstName","setFirstName","lastNameValid","setLastNameValid","lastName","setLastName","passwordValidate","setPasswordValidate","confirmPassword","setConfirmPassword","checkPassword","validate","signUp","createUserWithEmailAndPassword","sendEmailVerification","key","set","xs","sm","root","flexGrow","title","ApplicationBar","AppBar","position","Toolbar","onClick","Authentication","path","Component","PrivateRoute","rest","render","ADD_TODO_ITEM","DELETE_TODO_ITEM","SET_TODO_ITEMS","UPDATE_TODO_ITEM","SET_EDIT_FALG","SET_DELETE_FALG","SET_DELETE_FALG_VALUE","SET_FILTER_FALG","SET_FILTER_FALG_VALUE","RESET_EDIT_FALG","RESET_DELETE_FALG","RESET_FILTER_FALG","getTodos","currentUser","todosObj","todosArr","Object","keys","map","todo","push","deleteTodo","remove","addTodoItem","todoData","todoKey","addTodo","resetEditTodoItem","updateTodoItem","deleteMultipleTodo","resetDeleteFlag","resetFilterFlag","TextArea","currentWindow","window","innerWidth","setTodo","validateTodo","setValidateTodo","date","now","Date","current","getDate","toString","month","getMonth","year","getFullYear","getYear","currentDate","todoText","createdOn","isComplete","Paper","elevation","todoHandler","size","disabled","FilterButton","clicked","fab","bottom","right","Fab","aria-label","DeleteButton","TodoItem","checked","setChecked","Checkbox","myTodo","IconButton","removeTodoHandler","TodoList","pageCount","selectedTodos","todos","filteredTodos","page","setPage","initialPoint","setInitialPoint","finalPoint","setFinalPoint","slice","Math","ceil","Pagination","count","shape","ModalWindow","modalStyle","justifyContent","backgroundColor","palette","background","boxShadow","shadows","padding","open","setOpen","Modal","onClose","children","EditTodo","editTodo","text","setText","updatedTodo","ButtonGroup","formControl","minWidth","selectEmpty","DeleteAndFilterTodo","filter","filterFlag","selector","setSelector","setDeleteFlagValue","FormControl","InputLabel","Select","labelId","MenuItem","TodoApp","editModalFlag","editFlag","deleteModalFlag","deleteFlag","filterModalFlag","App","Auth","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","Store","document","getElementById"],"mappings":"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","file":"static/js/main.0881d698.chunk.js","sourcesContent":["// this is a type file where action are decleared\r\n\r\nexport const USER_SIGN_IN = 'USER_SIGN_IN';\r\nexport const USER_SIGN_UP = 'USER_SIGN_UP';\r\nexport const USER_SIGN_OUT = 'USER_SIGN_OUT';\r\n","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: `${process.env.REACT_APP_API_KEY}`,\r\n    authDomain: \"webmobilehybridapp.firebaseapp.com\",\r\n    databaseURL: \"https://webmobilehybridapp.firebaseio.com\",\r\n    projectId: \"webmobilehybridapp\",\r\n    storageBucket: \"webmobilehybridapp.appspot.com\",\r\n    messagingSenderId: \"1065788689805\",\r\n    appId: \"1:1065788689805:web:beb352a7c7149321b801c4\",\r\n    measurementId: \"G-RS5D3BHHJ4\"\r\n};\r\n// Initialize Firebase\r\nconst config = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default config;","// file where action are define\r\n\r\nimport {\r\n    USER_SIGN_IN,\r\n    USER_SIGN_UP,\r\n    USER_SIGN_OUT\r\n} from './AuthenticationType';\r\nimport config from '../../DBConfig/Config';\r\n\r\nconst userSignIn = () => {\r\n    return {\r\n        type: USER_SIGN_IN,\r\n    };\r\n};\r\n\r\nconst userSignOut = () => {\r\n    return {\r\n        type: USER_SIGN_OUT,\r\n    };\r\n};\r\n\r\nconst setUserData = (payload) => {\r\n    return {\r\n        type: USER_SIGN_UP,\r\n        payload\r\n    };\r\n};\r\n\r\nconst registeredNewUser = (data) => {\r\n    return (dispatch) => {\r\n        config.auth().createUserWithEmailAndPassword(data.email, data.password)\r\n            .then((res) => {\r\n                // uncommt for emil verification \r\n                res.user.sendEmailVerification()\r\n                    .then(function () {\r\n                        let userID = res.user.uid;\r\n                        let user = {\r\n                            key: userID,\r\n                            firstName: data.firstName,\r\n                            lastName: data.lastName,\r\n                            email: res.user.email,\r\n                        };\r\n                        alert('A verification email has been sent to your account.');\r\n                        config.database().ref(`/TODO-App/registered-users/${user.key}`).set(user)\r\n                            .then(() => {\r\n                                // dispatch(setUserData(user));\r\n                            })\r\n                            .catch(err =>\r\n                                console.log(err)\r\n                            );\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n};\r\n\r\nconst getUserData = () => {\r\n    return dispatch => {\r\n        let userData;\r\n        config.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                if (user.emailVerified) {\r\n                    config.database().ref(`TODO-App/registered-users/${user.uid}`).once('value')\r\n                        .then(data => {\r\n                            userData = { ...data.val() };\r\n                            dispatch(userSignIn());\r\n                            dispatch(setUserData(userData));\r\n                        })\r\n                        .catch(error => {\r\n                            console.log('catch block');\r\n                            console.log(error);\r\n                        });\r\n                }\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nconst loginUser = (formData) => {\r\n    return dispatch => {\r\n        config.auth().signInWithEmailAndPassword(formData.email, formData.password)\r\n            .then(res => {\r\n                if (res.user.emailVerified) {\r\n                    dispatch(userSignIn());\r\n                    dispatch(getUserData());\r\n                } else {\r\n                    alert('email not verified');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                alert('There is no user record corresponding to this identifier.');\r\n            });\r\n    };\r\n};\r\n\r\nconst logoutUser = () => {\r\n    return dispatch => {\r\n        config.auth().signOut()\r\n            .then(() => {\r\n                dispatch(userSignOut());\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            });\r\n    };\r\n};\r\n\r\n\r\n\r\nexport {\r\n    registeredNewUser,\r\n    loginUser,\r\n    getUserData,\r\n    logoutUser\r\n};","import React, {useState, useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  useDispatch,\r\n  useSelector\r\n} from 'react-redux';\r\n\r\nimport '../Authentication.css'\r\nimport {\r\n  loginUser,\r\n  getUserData\r\n} from '../../../redux/authentication/AuthenticationActions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(15),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction SignIn(props) {\r\n\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector(state => state.auth.isLogedIn);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserData());\r\n    if (isLoggedIn) {\r\n      props.history.replace('/todo-app');\r\n    }\r\n  }, [isLoggedIn, props.history]);\r\n\r\n    const validate = (pattern, field) => {\r\n      let regex = new RegExp(pattern);\r\n      if (regex.test(field)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    const [emailValid, setEmailValid] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const handleEmail = e => {\r\n        setEmail(e.target.value);\r\n        setEmailValid(validate(/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9-]+)*$/g, e.target.value));\r\n    };\r\n\r\n    const [password, setPassword] = useState('');\r\n    const handlePassword = e => setPassword(e.target.value);\r\n\r\n    const classes = useStyles();\r\n\r\n    const login = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (emailValid && password.length > 5) {\r\n      let data = {\r\n        email: email,\r\n        password: password\r\n      };\r\n\r\n        // console.log(data)\r\n      dispatch(loginUser(data));\r\n    //   userLogin(data);\r\n\r\n      setEmail('');\r\n      setPassword('');\r\n    }\r\n    // else {\r\n    //   setMessage('Please enter all fields', 'error');\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign In\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={(e) => login(e)} method='post'>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            value={email}\r\n            onChange={handleEmail}\r\n            error={email !== '' & !emailValid}\r\n            helperText={email !== '' & !emailValid ? 'email pattern : username@domain.com' : ''}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={handlePassword}\r\n            error={password.length > 0 && password.length < 6}\r\n            helperText={password.length > 0 && password.length < 6 ? 'password must be atleast 6 characters long' : ''}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          {/* <Link to='/todo-app' className='link'> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n            </Button>\r\n            {/* </Link> */}\r\n        <Grid  container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to='/sign-up' className = 'link'>\r\n            <Typography\r\n              color='primary'\r\n              gutterBottom={ true }\r\n              variant='subtitle2'\r\n            >\r\n              Don't have an account? Sign Up\r\n            </Typography>\r\n          </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignIn\r\n","import React, {useState, useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  useDispatch,\r\n  useSelector\r\n} from 'react-redux';\r\n\r\nimport '../Authentication.css'\r\nimport {\r\n  registeredNewUser,\r\n  getUserData\r\n} from '../../../redux/authentication/AuthenticationActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(15),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nfunction SignUp(props) {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector(state => state.auth.isLogedIn);\r\n\r\n  useEffect(() => {\r\n    // console.log(`from sign in effect`)\r\n    dispatch(getUserData());\r\n    if (isLoggedIn) {\r\n      props.history.replace('/todo-app');\r\n    }\r\n  }, [isLoggedIn, props.history]);\r\n\r\n   const [firstNameValid, setFirstNameValid] = useState(false);\r\n  const [firstName, setFirstName] = useState('');\r\n  const handleFirstName = e => {\r\n    setFirstName(e.target.value);\r\n    setFirstNameValid(validate(/[a-zA-Z]{2}/g, firstName));\r\n  };\r\n\r\n  const [lastNameValid, setLastNameValid] = useState(false);\r\n  const [lastName, setLastName] = useState('');\r\n  const handleLastName = e => {\r\n    setLastName(e.target.value);\r\n    setLastNameValid(validate(/[a-zA-Z]{2}/g, lastName));\r\n  };\r\n\r\n  const [emailValid, setEmailValid] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const handleEmail = e => {\r\n    setEmail(e.target.value);\r\n    setEmailValid(validate(/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9-]+)*$/g, email));\r\n  };\r\n\r\n  const [password, setPassword] = useState('');\r\n  const handlePassword = e => setPassword(e.target.value);\r\n\r\n  const [passwordValidate, setPasswordValidate] = useState(false);\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const handleConfirmPassword = e => {\r\n    setConfirmPassword(e.target.value);\r\n    setPasswordValidate(!(e.target.value.length == password.length && checkPassword(password, e.target.value)));\r\n  };\r\n\r\n   const checkPassword = (password, confirmPassword) => {\r\n    return password === confirmPassword ? true : false;\r\n  };\r\n\r\n  const validate = (pattern, field) => {\r\n    let regex = new RegExp(pattern);\r\n    if (regex.test(field)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const signUp = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (firstName && lastName && email && password) {\r\n      if (firstNameValid && lastNameValid && emailValid && !passwordValidate) {\r\n        let userData = {\r\n          firstName,\r\n          lastName,\r\n          email,\r\n          password,\r\n        }; \r\n\r\n        dispatch(registeredNewUser(userData));\r\n  \r\n        setFirstName('');\r\n        setLastName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        \r\n        props.history.replace('/sign-in');\r\n      }\r\n    }\r\n    // else {\r\n    //   setMessage('Please enter all fields', 'error');\r\n    // }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign Up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={e=>signUp(e)} method='post'>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                value={firstName}\r\n                onChange={handleFirstName}\r\n                error={firstName !== '' & !firstNameValid}\r\n                helperText={firstName !== '' & !firstNameValid ? 'must be atleast 3 chars long' : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                value={lastName}\r\n                onChange={handleLastName}\r\n                error={lastName !== '' & !lastNameValid}\r\n                helperText={lastName !== '' & !lastNameValid ? 'must be atleast 3 chars long' : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"off\"\r\n                value={email}\r\n                onChange={handleEmail}\r\n                error={email !== '' & !emailValid}\r\n                helperText={email !== '' & !emailValid ? 'email pattern : username@domain.com' : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={handlePassword}\r\n                autoComplete=\"off\"\r\n                error={password.length > 0 && password.length < 6}\r\n                helperText={password.length > 0 && password.length < 6 ? 'password must be atleast 6 characters long' : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                value={confirmPassword}\r\n                onChange={handleConfirmPassword}\r\n                error={passwordValidate}\r\n                helperText={passwordValidate ? 'password must be same' : ''}\r\n                autoComplete=\"off\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n            <Link to='/' className = 'link'>\r\n            <Typography\r\n              color='primary'\r\n              gutterBottom={ true }\r\n              variant='subtitle2'\r\n            >\r\n              Already have an account? Sign in\r\n            </Typography>\r\n          </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  useSelector,\r\n  useDispatch\r\n} from 'react-redux'\r\n\r\nimport {\r\n  logoutUser\r\n} from '../../../redux/authentication/AuthenticationActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction ApplicationBar() {\r\n  const classes = useStyles();\r\n  const user = useSelector(state => state.auth.user);\r\n  const isLoggedIn = useSelector(state => state.auth.isLogedIn);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {\r\n        isLoggedIn  && user?\r\n          <AppBar position=\"fixed\">\r\n            <Toolbar>\r\n            <Typography variant=\"h6\">\r\n                {`${user.firstName} ${user.lastName}`}\r\n            </Typography>\r\n            <div className={classes.title}>\r\n            </div>\r\n            <Button color=\"inherit\" onClick={() => dispatch(logoutUser())}>Logout</Button>\r\n            </Toolbar>\r\n        </AppBar> : \r\n                <AppBar position=\"fixed\">\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                  TODO APP\r\n              </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ApplicationBar\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport SignIn from './signIn/SignIn';\r\nimport SignUp from './signUp/SignUp';\r\nimport AppBar from '../TodoApp/appBar/ApplicationBar';\r\n\r\nexport default class Authentication extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppBar />\r\n                <Switch>\r\n                    <Route path='/sign-up' component={SignUp} />\r\n                    <Route path='/' component={SignIn} />\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\n\r\nfunction PrivateRoute({component: Component, ...rest}) {\r\n\r\n    const isLogedIn = useSelector(state => state.auth.isLogedIn);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                props => {\r\n                    return (\r\n                        !isLogedIn ?\r\n                        <Redirect to='/' /> :\r\n                        <Component {...props} />\r\n                    )\r\n                }                \r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","export const ADD_TODO_ITEM = 'ADD_TODO_ITEM';\r\nexport const DELETE_TODO_ITEM = 'DELETE_TODO_ITEM';\r\nexport const SET_TODO_ITEMS = 'GET_TODO_ITEMS';\r\nexport const UPDATE_TODO_ITEM = 'UPDATE_TODO_ITEM';\r\nexport const SET_EDIT_FALG = 'SET_EDIT_FALG';\r\nexport const SET_DELETE_FALG = 'SET_DELETE_FALG';\r\nexport const SET_DELETE_FALG_VALUE = 'SET_DELETE_FALG_VALUE';\r\nexport const SET_FILTER_FALG = 'SET_FILTER_FALG';\r\nexport const SET_FILTER_FALG_VALUE = 'SET_FILTER_FALG_VALUE';\r\nexport const RESET_EDIT_FALG = 'RESET_EDIT_FALG';\r\nexport const RESET_DELETE_FALG = 'RESET_DELETE_FALG';\r\nexport const RESET_FILTER_FALG = 'RESET_FILTER_FALG';\r\n","import {\r\n    ADD_TODO_ITEM,\r\n    SET_TODO_ITEMS,\r\n    UPDATE_TODO_ITEM,\r\n    SET_EDIT_FALG,\r\n    RESET_EDIT_FALG,\r\n    SET_DELETE_FALG,\r\n    SET_DELETE_FALG_VALUE,\r\n    RESET_DELETE_FALG,\r\n    SET_FILTER_FALG,\r\n    SET_FILTER_FALG_VALUE,\r\n    RESET_FILTER_FALG,\r\n    DELETE_TODO_ITEM\r\n} from './todoType';\r\n\r\nimport config from '../../DBConfig/Config';\r\n\r\nconst setTodoItems = (todos) => {\r\n    return {\r\n        type: SET_TODO_ITEMS,\r\n        payload: todos\r\n    };\r\n};\r\n\r\nconst getTodos = () => {\r\n    return dispatch => {\r\n        const userData = config.auth().currentUser;\r\n        config.database().ref(`/TODO-App/registered-users/${userData.uid}/todos`).once('value', function (data) {\r\n            let todosObj = data.val();\r\n            let todosArr = [];\r\n\r\n            if (todosObj) {\r\n                let todoKeys = Object.keys(todosObj);\r\n                todoKeys.map(todo => {\r\n                    todosArr.push(todosObj[todo]);\r\n                });\r\n                dispatch(setTodoItems(todosArr));\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nconst addTodo = (todo) => {\r\n    return {\r\n        type: ADD_TODO_ITEM,\r\n        payload: todo\r\n    };\r\n};\r\n\r\nconst removeDeletedTodo = (key) => {\r\n    return {\r\n        type: DELETE_TODO_ITEM,\r\n        payload: key\r\n    };\r\n}\r\n\r\nconst deleteTodo = (todo, userData) => {\r\n    return dispatch => {\r\n        config.database().ref(`/TODO-App/registered-users/${userData.key}/todos/${todo.key}`).remove()\r\n            .then(res => {\r\n                dispatch(removeDeletedTodo(todo.key))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n};\r\n\r\nconst addTodoItem = (userData, todoData) => {\r\n    return dispatch => {\r\n        let todoKey = config.database().ref(`${userData.key}`).push().key;\r\n        let todo = {\r\n            ...todoData,\r\n            key: todoKey\r\n        };\r\n        config.database().ref(`/TODO-App/registered-users/${userData.key}/todos/${todoKey}`).set(todo)\r\n            .then(res => {\r\n                dispatch(addTodo(todo));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n};\r\n\r\nconst setEditTodoItem = (todoItem) => {\r\n    return {\r\n        type: SET_EDIT_FALG,\r\n        payload: todoItem\r\n    };\r\n};\r\n\r\nconst resetEditTodoItem = () => {\r\n    return {\r\n        type: RESET_EDIT_FALG,\r\n    };\r\n};\r\n\r\nconst updatedTodo = (updatedTodo) => {\r\n    // console.log(updatedTodo)\r\n    return {\r\n        type: UPDATE_TODO_ITEM,\r\n        payload: updatedTodo\r\n    };\r\n};\r\n\r\nconst updateTodoItem = (userData, todoData) => {\r\n    return dispatch => {\r\n        // console.log(todoData);\r\n        config.database().ref(`/TODO-App/registered-users/${userData.key}/todos/${todoData.key}`).set(todoData)\r\n            .then(res => {\r\n                dispatch(updatedTodo(todoData));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n};\r\n\r\nconst setDeleteFlag = () => {\r\n    return {\r\n        type: SET_DELETE_FALG\r\n    };\r\n};\r\n\r\nconst deleteMultipleTodo = (value) => {\r\n    return {\r\n        type: SET_DELETE_FALG_VALUE,\r\n        payload: value\r\n    };\r\n}\r\n\r\nconst setDeleteFlagValue = (value, todos, user) => {    \r\n    return dispatch => {\r\n        let deleteTodosArr = todos.filter(todo => value === 'all' ? true : todo.isComplete === value)\r\n        deleteTodosArr.map(todo => {\r\n            if (value === 'all') {\r\n                config.database().ref(`/TODO-App/registered-users/${user.key}/todos`).remove()\r\n                    .then(res => {\r\n                        dispatch(deleteMultipleTodo(value));\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n                } else {\r\n                config.database().ref(`/TODO-App/registered-users/${user.key}/todos/${todo.key}`).remove()\r\n                    .then(res => {\r\n                        dispatch(deleteMultipleTodo(value));\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    \r\n};\r\n\r\nconst resetDeleteFlag = () => {\r\n    return {\r\n        type: RESET_DELETE_FALG\r\n    };\r\n};\r\n\r\nconst setFilterFlag = () => {\r\n    return {\r\n        type: SET_FILTER_FALG\r\n    };\r\n};\r\n\r\nconst setFilterFlagValue = (value) => {\r\n    return {\r\n        type: SET_FILTER_FALG_VALUE,\r\n        payload: value\r\n    };\r\n};\r\n\r\nconst resetFilterFlag = () => {\r\n    return {\r\n        type: RESET_FILTER_FALG\r\n    };\r\n};\r\n\r\nexport {\r\n    getTodos,\r\n    addTodoItem,\r\n    updateTodoItem,\r\n    deleteTodo,\r\n    setEditTodoItem,\r\n    resetEditTodoItem,\r\n    setDeleteFlag,\r\n    setDeleteFlagValue,\r\n    resetDeleteFlag,\r\n    setFilterFlag,\r\n    setFilterFlagValue,\r\n    resetFilterFlag\r\n};","import React, {useState} from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport {\r\n    useSelector,\r\n    useDispatch\r\n} from 'react-redux'\r\n\r\nimport './textArea.css'\r\nimport {\r\n    addTodoItem\r\n} from '../../../redux/todo/todoAction'\r\n\r\nfunction TextArea() {\r\n\r\n    let currentWindow = window.innerWidth;\r\n    const userData = useSelector(state => state.auth.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const [todo, setTodo] = useState('');\r\n    const [validateTodo, setValidateTodo] = useState(false);\r\n\r\n    const todoHandler = (e) => {\r\n        setTodo(e.target.value);\r\n        setValidateTodo(validate(/^[a-zA-Z0-9\\ ]*$/gm ,e.target.value));\r\n    }\r\n\r\nconst validate = (pattern, field) => {\r\n        let regex = new RegExp(pattern);\r\n        if (regex.test(field)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const currentDate = () => {\r\n\r\n        let now = new Date();\r\n    \r\n        let getMonth = () => {\r\n          let month = now.getMonth() + 1;\r\n          if (month < 10) {\r\n            return \"0\" + month.toString();\r\n          } else return month.toString();\r\n        };\r\n    \r\n        let getDate = () => {\r\n          let current = (now.getDate());\r\n          if (current < 10) {\r\n            return \"0\" + current.toString();\r\n          } else return current.toString();\r\n        };\r\n    \r\n        let getYear = () => {\r\n          let year = (now.getFullYear()).toString();\r\n          if (year < 10) {\r\n            return \"0\" + year.toString();\r\n          } else return year.toString();\r\n        };\r\n    \r\n        return getDate() + \"-\" + getMonth() + \"-\" + getYear();\r\n    };\r\n    \r\n    const addTodoHAndler = (e) => {\r\n        e.preventDefault();\r\n        let date = currentDate();\r\n        let todoData = {\r\n            todoText: todo,\r\n            createdOn: date,\r\n            isComplete: false\r\n        }\r\n\r\n        dispatch(addTodoItem(userData, todoData));\r\n        \r\n        setTodo('');\r\n    }\r\n\r\n    return (\r\n        <form\r\n            autoComplete='off'\r\n            onSubmit={addTodoHAndler}\r\n        >\r\n        <Paper\r\n            elevation={3}\r\n            className='textArea-container'\r\n        >\r\n            <TextField\r\n                id=\"outlined-basic\"\r\n                label='Write your Todos....'\r\n                variant=\"outlined\"\r\n                value={todo}\r\n                fullWidth='true'\r\n                onChange={(e) => todoHandler(e)}\r\n                error={todo !== '' & !validateTodo}\r\n                helperText={todo !== '' & !validateTodo ? 'Special characters are not allowed' : ''}\r\n                size={currentWindow < 500 ? 'small' : 'large'}                \r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size={currentWindow < 500 ? 'small' : 'large'}\r\n                disabled={todo !== '' & !validateTodo || todo === ''}\r\n            >\r\n                Add Todo\r\n            </Button>\r\n        </Paper>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TextArea\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Fab\r\n} from \"@material-ui/core\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nfunction FilterButton({clicked}) {\r\n    const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    fab: {\r\n      position: 'absolute',\r\n      bottom: theme.spacing(1),\r\n      right: theme.spacing(2),\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Fab\r\n            color=\"primary\"\r\n            aria-label=\"filter\"\r\n            size='small'\r\n            className={classes.fab}\r\n            onClick={clicked}\r\n        >\r\n        <FilterListIcon />\r\n        </Fab>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterButton\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Fab\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction DeleteButton({clicked}) {\r\n    const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    fab: {\r\n      position: 'absolute',\r\n      bottom: theme.spacing(1),\r\n      right: theme.spacing(8),\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Fab\r\n            color=\"secondary\"\r\n            aria-label=\"filter\"\r\n            size='small'\r\n            className={classes.fab}\r\n            onClick={clicked}\r\n        >\r\n        <DeleteIcon />\r\n        </Fab>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteButton\r\n","import React, {useState, useEffect} from 'react'\r\nimport {\r\n    Paper,\r\n    Typography,\r\n    Checkbox,\r\n    IconButton\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport {\r\n    useSelector,\r\n    useDispatch\r\n} from 'react-redux'\r\n\r\nimport './todoItem.css'\r\nimport {\r\n    updateTodoItem,\r\n    setEditTodoItem,\r\n    deleteTodo\r\n} from '../../../../redux/todo/todoAction'\r\n\r\nfunction TodoItem({todoData}) {\r\n    // console.log(todoData)\r\n    const userData = useSelector(state => state.auth.user)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        setTodo(todoData)\r\n    },[todoData])\r\n    \r\n    const [todo, setTodo] = useState(todoData)\r\n    // console.log(todo)\r\n\r\n    const [checked, setChecked] = useState(todo.isComplete)\r\n\r\n    const handleChecked = () => {\r\n        setChecked(!checked);\r\n        \r\n        let myTodo = {\r\n            ...todo,\r\n            isComplete: !checked\r\n        }\r\n        \r\n        dispatch(updateTodoItem(userData, myTodo))\r\n    }\r\n\r\n    const removeTodoHandler = (data, userData) => {\r\n        dispatch(deleteTodo(data, userData));\r\n    }\r\n\r\n    const editFlagHandler = () => {\r\n        dispatch(setEditTodoItem(todo));\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            className='todoItem'\r\n        >\r\n            <div className='todoBody' >\r\n                <div className='checkbox' >\r\n                    <Checkbox\r\n                        checked={checked}\r\n                        onChange={handleChecked}\r\n                        color='primary'\r\n                        size='small'\r\n                    />\r\n                </div>\r\n                <div className='dataBody'>\r\n                    <Typography\r\n                        variant='h5'\r\n                        className={checked? 'taskDoneText' : ''}\r\n                    >\r\n                        {todo.todoText}\r\n                    </Typography>\r\n                    <Typography\r\n                        variant='body2'\r\n                        className={checked? 'taskDone' : ''}\r\n                    >\r\n                        {todo.createdOn}\r\n                    </Typography>\r\n                </div>\r\n                <div className='buttonSection'>\r\n                    <IconButton\r\n                        aria-label='edit'\r\n                        color='primary'\r\n                        size='small'\r\n                        onClick={editFlagHandler}\r\n                        disabled={checked}\r\n                    >\r\n                        <EditIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        aria-label='remove'\r\n                        color='secondary'\r\n                        size='small'\r\n                        onClick={() => removeTodoHandler(todo, userData)}\r\n                    >\r\n                        <RemoveIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            </Paper>\r\n    )\r\n}\r\n\r\nexport default TodoItem\r\n","import React, {useState, useEffect} from 'react'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport {\r\n    useSelector,\r\n    useDispatch\r\n} from 'react-redux'\r\n\r\nimport './todoList.css'\r\nimport TodoItem from './todoItem/TodoItem'\r\nimport {\r\n    getTodos\r\n} from '../../../redux/todo/todoAction'\r\n\r\nfunction TodoList() {\r\n    \r\n    let currentWindow = window.innerWidth, pageCount, selectedTodos;\r\n    \r\n    // const todos = useSelector(state => state.todo.todos);\r\n    const todos = useSelector(state => state.todo.filteredTodos.length > 0 ? state.todo.filteredTodos : state.todo.todos );\r\n    const dispatch = useDispatch()\r\n        \r\n    const [page, setPage] = useState(1);\r\n    const [initialPoint, setInitialPoint] = useState(0);\r\n    const [finalPoint, setFinalPoint] = useState(currentWindow > 500 ? 4 : 3 );\r\n\r\n    selectedTodos = todos.slice(initialPoint, finalPoint);\r\n    \r\n    if (currentWindow < 500) {\r\n        pageCount = Math.ceil(todos.length / 3);\r\n    } else {\r\n        pageCount = Math.ceil(todos.length / 4);\r\n    }        \r\n    \r\n    \r\n    const handlePageChange = (e, value) => {\r\n        setPage(value);\r\n        \r\n        if (value > page) {\r\n            if (currentWindow < 500) {\r\n                setFinalPoint(finalPoint + (3 * (value - page)));\r\n                setInitialPoint(finalPoint * (value - page));\r\n            } else {\r\n                setFinalPoint(finalPoint + (4 * (value - page)));\r\n                setInitialPoint(finalPoint * (value - page));\r\n            }\r\n        }\r\n        \r\n        if (value < page) {\r\n            if (currentWindow < 500) {\r\n                setFinalPoint(finalPoint - (3 * (page - value)));\r\n                setInitialPoint(initialPoint - (3 * (page - value)));\r\n            } else {\r\n                setFinalPoint(finalPoint - (4 * (page - value)));\r\n                setInitialPoint(initialPoint - (4 * (page - value)));\r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className='todoListSection'>\r\n            <div className='todoList'>\r\n                {\r\n                    selectedTodos.map(todo => <TodoItem todoData={todo} key={todo.key} />)\r\n                }\r\n            </div>\r\n            <Pagination\r\n                count={pageCount}\r\n                page={page}\r\n                onChange={handlePageChange}\r\n                shape=\"rounded\"\r\n                size='small'\r\n                className='myPagination'\r\n                \r\n            />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nfunction ModalWindow(props) {\r\n    const { clicked } = props;\r\n    const useStyles = makeStyles((theme) => ({\r\n        modalStyle: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(3, 5, 4),\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        clicked();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            className={classes.modalStyle}\r\n            open={open}\r\n            onClose={handleClose}\r\n        >\r\n            <div className={classes.paper} >\r\n                {props.children}\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModalWindow\r\n","import React, {useState} from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport {\r\n    Typography,\r\n    ButtonGroup\r\n} from '@material-ui/core';\r\n\r\nimport ModalWindow from '../../../../ui/modal/ModalWindow'\r\nimport {\r\n    useSelector,\r\n    useDispatch\r\n} from 'react-redux';\r\nimport {\r\n    resetEditTodoItem,\r\n    updateTodoItem\r\n} from '../../../../../redux/todo/todoAction'\r\n\r\nfunction EditTodo() {\r\n\r\n    const todo = useSelector(state => state.todo.editTodo);\r\n    const userData = useSelector(state => state.auth.user)\r\n    const dispatch = useDispatch();\r\n\r\n    const [text, setText] = useState(todo.todoText);\r\n     const [validateTodo, setValidateTodo] = useState(true);\r\n\r\n    const todoHandler = (e) => {\r\n        setText(e.target.value);\r\n        setValidateTodo(validate(/^[a-zA-Z0-9\\ ]*$/gm ,e.target.value));\r\n    }\r\n\r\nconst validate = (pattern, field) => {\r\n        let regex = new RegExp(pattern);\r\n        if (regex.test(field)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n    \r\n    const addTodoHAndler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        let updatedTodo = {\r\n            ...todo,\r\n            todoText: text\r\n        }\r\n\r\n        dispatch(updateTodoItem(userData, updatedTodo))\r\n        dispatch(resetEditTodoItem())\r\n\r\n        setText('');\r\n    }\r\n\r\n    return (\r\n        <ModalWindow\r\n            clicked={() => dispatch(resetEditTodoItem())}\r\n        >\r\n        <div>\r\n            <Typography\r\n                variant='h4'\r\n                gutterBottom='true'\r\n            >\r\n                Edit Your Todo\r\n            </Typography>\r\n            <form\r\n                autoComplete='off'\r\n            onSubmit={addTodoHAndler}\r\n            >\r\n                <Paper\r\n                    elevation={3}\r\n                    className='textArea-container'\r\n                >\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        size='small'    \r\n                        label='Update your Todos....'\r\n                        variant=\"outlined\"\r\n                        margin='normal'    \r\n                        value={text}\r\n                        fullWidth='true'\r\n                        onChange={(e) => todoHandler(e)}\r\n                        error={text !== '' & !validateTodo}\r\n                        helperText={text !== '' & !validateTodo ? 'Special characters are not allowed' : ''}\r\n                        \r\n                    />\r\n                    <ButtonGroup variant='contained' fullWidth={true}>                        \r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size='small'\r\n                            // disabled={todo !== '' & !validateTodo || todo === ''}\r\n                        >\r\n                            Update\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => dispatch(resetEditTodoItem())}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size='small'\r\n                            // disabled={todo !== '' & !validateTodo || todo === ''}\r\n                        >\r\n                            Cancle\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </Paper>\r\n            </form>\r\n            </div>\r\n        </ModalWindow>\r\n    )\r\n}\r\n\r\nexport default EditTodo\r\n","import React, {useState} from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport {\r\n    Typography,\r\n    ButtonGroup\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport ModalWindow from '../../../../ui/modal/ModalWindow'\r\nimport {\r\n    useSelector,\r\n    useDispatch\r\n} from 'react-redux';\r\nimport {\r\n    setFilterFlagValue,\r\n    resetFilterFlag,\r\n    setDeleteFlagValue,\r\n    resetDeleteFlag\r\n} from '../../../../../redux/todo/todoAction'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction DeleteAndFilterTodo() {\r\n\r\n    const filter = useSelector(state => state.todo.filterFlag);\r\n    const todos = useSelector(state => state.todo.todos);\r\n    const userData = useSelector(state => state.auth.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const classes = useStyles();\r\n    const [selector, setSelector] = useState('');\r\n\r\n    const handleChange = e => {\r\n        setSelector(e.target.value);\r\n    };\r\n    \r\n    const deleteAndFilterTodoHAndler = (e) => {\r\n        e.preventDefault();\r\n        if (selector !== '') {\r\n            filter ? dispatch(setFilterFlagValue(selector)) : dispatch(setDeleteFlagValue(selector, todos, userData))\r\n        }\r\n\r\n        filter ? dispatch(resetFilterFlag()) : dispatch(resetDeleteFlag())\r\n    }\r\n\r\n    return (\r\n        <ModalWindow\r\n            clicked={() => filter ? dispatch(resetFilterFlag()) : dispatch(resetDeleteFlag())}\r\n        >\r\n        <div>\r\n            <Typography\r\n                variant='h4'\r\n                gutterBottom='true'\r\n            >\r\n                {filter ? 'Filter Your Todos' : 'Delete Your Todos'}\r\n            </Typography>\r\n            <form\r\n                autoComplete='off'\r\n            onSubmit={deleteAndFilterTodoHAndler}\r\n            >\r\n                <Paper\r\n                    elevation={3}\r\n                    className='textArea-container'\r\n                >\r\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">Please select</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={selector}\r\n                            onChange={handleChange}\r\n                            label=\"Please select\"\r\n                        >\r\n                        <MenuItem value=\"\">\r\n                            <em>Please select</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={'all'}>All</MenuItem>\r\n                        <MenuItem value={true}>Complete</MenuItem>\r\n                        <MenuItem value={false}>Incomplete</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <ButtonGroup variant='contained' fullWidth={true}>                        \r\n                        {\r\n                            filter ? \r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size='small'\r\n                            >\r\n                                Filter\r\n                            </Button> :\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                size='small'\r\n                            >\r\n                                Delete\r\n                            </Button> \r\n                        }\r\n                        <Button\r\n                            onClick={() =>  filter ? dispatch(resetFilterFlag()) : dispatch(resetDeleteFlag())}\r\n                            variant=\"contained\"\r\n                            color={filter ? 'secondary' : 'primary' }\r\n                            size='small'\r\n                        >\r\n                            Cancle\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </Paper>\r\n            </form>\r\n            </div>\r\n        </ModalWindow>\r\n    )\r\n}\r\n\r\nexport default DeleteAndFilterTodo\r\n","import React, { useEffect } from 'react'\r\nimport {\r\n    useDispatch,\r\n    useSelector\r\n} from 'react-redux'\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport './TodoApp.css'\r\nimport AppBar from './appBar/ApplicationBar'\r\nimport TextArea from './textArea/TextArea'\r\nimport FilterButton from '../ui/filterButton/FilterButton'\r\nimport DeleteButton from '../ui/deleteButton/DeleteButton';\r\n// import ModalWindow from '../ui/modal/ModalWindow'\r\nimport TodoList from './todoList/TodoList'\r\nimport {\r\n    getTodos,\r\n    setDeleteFlag,\r\n    setFilterFlag\r\n} from '../../redux/todo/todoAction'\r\nimport EditTodo from './todoList/todoItem/editTodo/EditTodo';\r\nimport DeleteAndFilterTodo from './todoList/todoItem/deleteAndFilterTodo/DeleteAndFilterTodo';\r\n\r\n\r\nfunction TodoApp() {\r\n\r\n    const todos = useSelector(state => state.todo.todos)\r\n    const editModalFlag = useSelector(state => state.todo.editFlag)\r\n    const deleteModalFlag = useSelector(state => state.todo.deleteFlag)\r\n    const filterModalFlag = useSelector(state => state.todo.filterFlag)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getTodos());\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <AppBar />\r\n            <div className='container'>\r\n                <TextArea />\r\n                {\r\n                    todos.length > 0 ?\r\n                        <TodoList /> :\r\n                        <Typography\r\n                            variant='h4'\r\n                            gutterBottom='true'\r\n                            className='loadin'\r\n                        >\r\n                            Add todos...\r\n                        </Typography>\r\n                        \r\n                }\r\n                <FilterButton \r\n                    clicked={() => dispatch(setFilterFlag())}  \r\n                />\r\n                <DeleteButton \r\n                    clicked={() => dispatch(setDeleteFlag())} \r\n                />\r\n                {\r\n                    editModalFlag &&\r\n                    <EditTodo />                    \r\n                }\r\n                {\r\n                    deleteModalFlag &&\r\n                    <DeleteAndFilterTodo />\r\n                }\r\n                {\r\n                    filterModalFlag &&\r\n                    <DeleteAndFilterTodo />\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoApp\r\n","import React,{useEffect} from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Switch, Route } from 'react-router'\nimport {\n  useDispatch\n} from 'react-redux'\n\nimport './App.css';\nimport Auth from './Components/Authentication/Authentication';\nimport PrivateRoute from './route/PrivateRoute';\nimport TodoApp from './Components/TodoApp/TodoApp';\nimport {\n  getTodos\n} from './redux/todo/todoAction';\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() =>{\n    // dispatch(getTodos());\n  }, [])\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <PrivateRoute path='/todo-app' component={TodoApp} />\n          <Route to='/' component={Auth} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","//  reducers produce the state of your application.\r\n\r\nimport {\r\n    USER_SIGN_IN,\r\n    USER_SIGN_UP,\r\n    USER_SIGN_OUT\r\n} from './AuthenticationType';\r\n\r\nconst initialState = {\r\n    isLogedIn: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_SIGN_IN:\r\n            return {\r\n                ...state,\r\n                isLogedIn: true\r\n            };\r\n            break;\r\n\r\n        case USER_SIGN_UP:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    firstName: action.payload.firstName,\r\n                    lastName: action.payload.lastName,\r\n                    email: action.payload.email,\r\n                    key: action.payload.key\r\n                }\r\n            };\r\n            break;\r\n\r\n        case USER_SIGN_OUT:\r\n            return {\r\n                ...state,\r\n                isLogedIn: false,\r\n                user: {}\r\n            };\r\n            break;\r\n        \r\n        default:\r\n            return {\r\n                ...state\r\n            };\r\n    };\r\n};","//  reducers produce the state of your application.\r\n\r\nimport {\r\n    ADD_TODO_ITEM,\r\n    SET_TODO_ITEMS,\r\n    UPDATE_TODO_ITEM,\r\n    SET_EDIT_FALG,\r\n    RESET_EDIT_FALG,\r\n    SET_DELETE_FALG,\r\n    RESET_DELETE_FALG,\r\n    SET_FILTER_FALG,\r\n    RESET_FILTER_FALG,\r\n    DELETE_TODO_ITEM,\r\n    SET_FILTER_FALG_VALUE,\r\n    SET_DELETE_FALG_VALUE,\r\n} from './todoType';\r\n\r\nconst initialState = {\r\n    todos: [],\r\n    filteredTodos: [],\r\n    editFlag: false,\r\n    editTodo: {},\r\n    filterFlag: false,\r\n    deleteFlag: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TODO_ITEMS:\r\n            return {\r\n                ...state,\r\n                todos: action.payload\r\n            };\r\n            break;\r\n\r\n        case ADD_TODO_ITEM:\r\n            return {\r\n                ...state,\r\n                todos: [...state.todos, action.payload]\r\n            };\r\n            break;\r\n        \r\n        case SET_EDIT_FALG:\r\n            return {\r\n                ...state,\r\n                editFlag: true,\r\n                editTodo: action.payload\r\n            };\r\n            break;\r\n\r\n        case DELETE_TODO_ITEM:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter(todo => todo.key !== action.payload)\r\n            };\r\n            break;\r\n        \r\n        case UPDATE_TODO_ITEM:\r\n            return {\r\n                ...state,\r\n                todos: [...state.todos.map((todo) => todo.key === action.payload.key ? action.payload : todo)]\r\n            };\r\n            break;\r\n\r\n        case RESET_EDIT_FALG:\r\n            return {\r\n                ...state,\r\n                editFlag: false,\r\n                editTodo: {}\r\n            };\r\n            break;\r\n        \r\n        case SET_DELETE_FALG:\r\n            return {\r\n                ...state,\r\n                deleteFlag: true\r\n            };\r\n            break;\r\n\r\n        case SET_DELETE_FALG_VALUE:\r\n            return {\r\n                ...state,\r\n                todos: action.payload === 'all' ? [] : state.todos.filter(todo => todo.isComplete !== action.payload)\r\n            };\r\n            break;\r\n\r\n        case RESET_DELETE_FALG:\r\n            return {\r\n                ...state,\r\n                deleteFlag: false,\r\n            };\r\n            break;\r\n\r\n        case SET_FILTER_FALG:\r\n            return {\r\n                ...state,\r\n                filterFlag: true\r\n            };\r\n            break;\r\n\r\n        case SET_FILTER_FALG_VALUE:\r\n            return {\r\n                ...state,\r\n                filteredTodos: state.todos.filter(todo => action.payload === 'all' ? true : todo.isComplete === action.payload)\r\n            };\r\n            break;\r\n\r\n        case RESET_FILTER_FALG:\r\n            return {\r\n                ...state,\r\n                filterFlag: false,\r\n            };\r\n            break;\r\n        \r\n        default:\r\n            return {\r\n                ...state\r\n            };\r\n    };\r\n};","import { combineReducers } from 'redux';\r\nimport AuthenticationReducer from './authentication/AuthenticationReducer';\r\nimport todoReducer from './todo/todoReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: AuthenticationReducer,\r\n    todo: todoReducer,\r\n    \r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n// import logger from 'redux-logger'\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport Store from './redux/Store';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}